newapp (){
  make-skeleton
  make-server
  make-webpack
  make-index
  make-js
  ujson
  quick-start
}


ujson (){
  json --in-place -f package.json -e 'this.scripts={"dev": "webpack-dev-server --config webpack/webpack.config.js --open",
    "build": "webpack --config webpack/webpack.prod.config.js && npm run copy-files",
    "copy-files": "cp src/index.html dist && cp -r views dist",
    "prod": "node server.js"}'
}

make-server () {
 printf "const express = require('express');
const history = require('connect-history-api-fallback')
const server = express();
const staticFileMiddleware = express.static('dist');
server.use(staticFileMiddleware);
server.use(history({
  disableDotRule: true,
  verbose: true
}));
server.use(staticFileMiddleware);
server.listen(process.env.PORT || 5000);" > server.js
}

make-webpack (){
  printf "module.exports = options => {
  return {
    entry: './src/js/index.js',
    output: {
      filename: 'bundle.js',
    },
    devtool: 'source-map',
    devServer: {
      port: 7100,
       historyApiFallback: {
        index: 'src/index.html',
      },
    }
  }
}" > webpack/webpack.config.js
}



hyper-template () {
  printf '{
  "plugins": [
    ["transform-react-jsx", { "pragma": "h" }]
  ],
  "presets": [
    ["es2015", {
      "es2015": {
        "modules": false
      }
    }],
  ],
}' > .babelrc
  mkdir src/hyperapp
  printf "module.exports = options => {
  return {
    entry: './src/hyperapp/index.js',
    output: {
      filename: 'bundle.js',
    },
    devtool: 'source-map',
    devServer: {
      port: 7101,
       historyApiFallback: {
        index: 'src/index.html',
      },
    },
    module: {
      rules: [{
        loader: 'babel-loader',
      }],
    },
  }
}" > webpack/hyperapp.config.js
  printf "import { app } from 'hyperapp';
import { Router } from '@hyperapp/router'
import actions from './actions';
import state from './state';
import view from './views';
import events from './events';

app({
    state,
    actions,
    view,
    mixins: [Router],
    events
});" > src/hyperapp/index.js
}

make-skeleton () {
  mkdir $1 && cd $1
  npm init -y
  git init
  echo '### $1' > README.md
  echo '### 0.0.0' > CHANGELOG.md
  mkdir -p dist src/js docs webpack
}

make-index () {
  printf "<!DOCTYPE html>
  <html lang='en'>
    <head>
      <meta name='viewport' content='width=device-width, initial-scale=1, shrink-to-fit=no'>
    <title>Index</title>
    </head>
    <body>
      <ul id='header'></ul>
      <div id='main'></div>
      <script src='./bundle.js'></script>
  </body>
</html>" > src/index.html
}

make-js () {
  printf "export class Index {

    constructor(){
      const page = window.location.pathname.substr(1)
      let main = document.getElementById('main')
      main.innerHTML = 'hello'
    }
  };
  document.addEventListener('DOMContentLoaded', () => {
    new Index()
  });"  > src/js/index.js
}

quick-start () {
    npm i path express
    npm i --save-dev webpack webpack-dev-server
}